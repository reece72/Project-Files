insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>CPU, CU and ALU</h1>\n    <p>CPU stands for Central Processing Unit. The CPU is the primary component of a computer that processes instructions. It runs the operating system and applications, constantly receiving input from the user or active software programs.</p>\n    <p>CU stands for Control Unit and is an integrated circuit in a processor that controls the input and output. It receives instructions from a program, then passes them to the arithmetic logic unit ALU.</p>\n    <p>ALU stands for Arithmetic Logic Unit and is a digital circuit that is used to perform arithmetic and logic operations. It represents the fundamental building block of the central processing unit of a computer. Modern CPUs contain very powerful and complex ALUs.</p>', 1, 'Chapter 1 - Processor Components');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n  \n<h1>Factors affecting Process Performance</h1>\n    <p>Clock Speed measures the number of cycles your CPU executes per second and is measured in GHz (gigahertz). A CPU with a clock speed of 3.2 GHz executes 3.2 billion cycles per second.</p>\n    <p>The speed of your CPU determines how fast you can execute instructions. The number of cores allows computers to process more instructions. CPUs nowadays will have multiple cores and that means they will have more power to run multiple programs at the same time.</p>\n    <p>Cache Memory temporarily stores frequently used instructions and data for quicker processing by the central processing unit, since it is closer to the CPU than the main memory, so instructions can be fetched quicker.</p>\n    <p>Pipelining is the process of accumulating instructions from the processor through a pipeline. It allows storing and executing instructions in an orderly process. So when the computer fetches an instruction and decodes it, it will fetch another instruction and so on.</p>', 2, 'Chapter 2 - Processor Performance');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Memory and the Stored Program Concept</h1>\n    <p>Von Neumann Machine is where the same data bus is used to transfer both data and instructions and a single address bus is used to transfer the addresses of data and instructions.</p>\n    <p>Harvard Architecture is a computer architecture with separate memories for instructions and data.</p>\n\n<h1>CISC and RISC</h1>\n    <p>CISC refers to Complex Instruction Set Computers where a large instruction set is used to accomplish tasks in as few lines of assembly language as possible.</p>\n    <p>RISC refers to Reduced Instruction Set Computers where it uses only simple instructions, each taking one clock cycle to be executed.</p>\n\n<h1>Processors</h1>\n    <p>Co-Processor Systems is an extra processor used to supplement the functions of the primary processor and it may be used to perform floating-point, arithmetic, graphics processing, and other functions.</p>\n    <p>Multicore and Parallel Systems can distribute workload across multiple CPU cores which will recieve higher performance.</p>\n    <p>Graphics Processing Unit (GPU) is a specialised electronic circuit that is very effective at manipulating computer graphics and image processing.</p>', 3, 'Chapter 3 - Types of Processors');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Input Devices</h1>\n    <p>Barcodes consist of bars and spaces and are a machine-readable representation of numerals and characters. A barcode consists of bars and spaces of varying widths that can be read with an optical barcode scanner.</p>\n    <p>Barcode Readers is a hand-held or stationary input device used to capture and read the information contained in a bar code.</p>\n    <p>Laser Scanners use a laser beam as the light source.</p>\n    <p>Cameras sensor consists of millions of tiny light sensors arranged in a grid and the binary data is recorded onto the camera\'s memory card so that the image can be reproduced using the software.</p>\n\n<h1>Radio Frequency Identification</h1>\n    <p>RFID tags are a type of tracking system that uses radiofrequency to search, identify, track, and communicate with items and people. RFID tags are smart labels that can store a range of information from serial numbers, to a short description, and even pages of data.</p>\n    <p>Active Tags include a battery to power the tags and to make sure that it actively transmits a signal for the reader to pick up.</p>\n    <p>Passive Tags are cheaper to produce and do not contain a battery but rely on radio waves emitted from a reader up to a meter away.</p>', 4, 'Chapter 4 - Input Devices');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Output Devices</h1>\n<h1>Monitors</h1>\n    <p>Monitors is an electronic visual computer display that includes a screen, circuitry, and the case in which that circuitry is protected. It displays images and videos.</p>\n<h1>Printers</h1>\n    <p>Printers is a device that accepts text and graphic output from a computer and transfers the information to paper.</p>\n<h1>Projectors</h1>\n    <p>Projectors take images generated by a computer and reproduce them by projection onto a screen, wall, or another surface, for example, you could use a projector to show a presentation on a large screen so that everyone in the room can see it.</p>\n<h1>Speakers</h1>\n    <p>Speakers connect to a computer to generate sound. The signal used to produce the sound that comes from a computer speaker is created by the computer\'s sound card.</p>\n<h1>Actuators</h1>\n    <p>Actuators is a device that uses a form of power to convert a control signal into mechanical motion. From electric door locks in automobiles, actuators are all around us.</p>\n', 5, 'Chapter 5 - Output Devices');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Secondary Storage</h1>\n    <p>Secondary storage is non-volatile, long-term storage. It is used to keep programs and data indefinitely. Without secondary storage, all programs and data would be lost the moment the computer is switched off.</p>\n\n<h1>Hard Disk</h1>\n    <p>Hard disk, also called hard disk drive or hard drive, magnetic storage medium for a computer. Hard disks are flat circular plates made of aluminum or glass and coated with magnetic material. Hard disks for personal computers can store terabytes of information.</p>\n\n<h1>Optical Disk</h1>\n    <p>An optical disk is any computer disk that uses optical storage techniques and technology to read and write data. It is a storage device in which optical energy is used. It is a computer storage disk that stores data digitally and uses laser beams to read and write data.</p>\n\n<h1>RAM and ROM</h1>\n    <p>RAM stands for \'Random Access Memory\' and is one of the most fundamental elements of computing. RAM is the super-fast and temporary data storage space that a computer needs to access right now or in the next few moments. ROM stands for \'Read Only Memory\' is a flash memory chip that contains a small amount of non-volatile memory. ROM contains the BIOS which is the firmware.</p>\n\n<h1>Virtual Storage</h1>\n    <p>Virtual memory is a section of volatile memory created temporarily on the storage drive. It is created when a computer is running many processes at once and RAM is running low.</p>', 6, 'Chapter 6 - Storage Devices');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>What is an Operating System</h1>\n    <p>Operating systems contain and manage all the programs and applications that a computer or mobile device can run, which means managing the device\'s software and hardware functions.</p>\n\n<h1>Functions of an Operating System</h1>\n    <p>Memory Management is the process of controlling and coordinating computer memory, assigning portions called blocks to various running programs to optimize overall system performance.</p>\n    <p>Interrupt Service Routine (ISR) is a software routine that hardware invokes in response to an interrupt. ISR examines an interrupt and determines how to handle it executes the handling, and then returns a logical interrupt value.</p>\n    <p>Processor Scheduling is the allocation of a computer\'s processor power to specific tasks. The practice uses the term \"scheduling\" because it assigns a specific percentage of time the processor is running to individual tasks.</p>\n    <p>Peripheral Management communicates and control devices such as mice, keyboards, monitors, and printers.</p>', 7, 'Chapter 7 - Functions of an Operating System');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Types of Operating Systems</h1>\n    <p>Distributed</p>\n    <p>Multi-tasking</p>\n    <p>Multi-user, Multi-tasking</p>\n    <p>Embedded</p>\n    <p>Real-time</p>\n\n<h1>Features of an operating system are: allows disk access and file systems, device drivers, security, program execution, memory management, multitasking, and handling I/O operations.</h1>\n    <p>Basic Input Output System (BIOS) is the Basic Input/Output System and is the built-in core processor software responsible for booting up your system. Typically embedded into your computer as a motherboard chip.</p>\n    <p>Device Drivers s a set of files that tells a piece of hardware how to function by communicating with a computer\'s operating system.</p>', 8, 'Chapter 8 - Types of Operating Systems');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Systems Software</h1>\n    <p>Systems software is a type of computer program that is designed to run a computer\'s hardware and application programs.</p>\n\n<h1>Utility Programs</h1>\n    <p>Utility Software is system software that helps to maintain the proper and smooth functioning of a Computer System.</p>\n    <p>Disk Defragmentation</p>\n    <p>Automatic Backup</p>\n    <p>Anti-virus</p>\n    <p>Compression software</p>\n\n<h1>Applications Software</h1>\n    <p>General-purpose is software that has been designed to solve user\'s common or general tasks using a computer system.</p>\n    <p>Special-purpose performs one specific task. This might include playing music, payroll software or an application for revising maths.</p>\n\n<h1>Closed-source and Open-source</h1>\n    <p>Closed-source is software that holds the source code safe and encrypted. This means the user can\'t copy, modify, or delete parts of the code without some type of consequence. It can go from voiding the warranty to even legal repercussions.</p>\n    <p>Open-source makes its source code available to others who would like to view that code, copy it, learn from it, alter it, or share it.</p>', 9, 'Chapter 9 - The Nature of Applications');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Translators</h1>\n    <p>Compilers are computer software that translates (compiles) source code written in a high-level language (C++) into a set of machine-language instructions that can be understood by a digital computer\'s CPU. </p>\n    <p>Interpreters translate code into machine code, instruction by instruction then the CPU executes each instruction before the interpreter moves on to translate the next instruction. Interpreted code will show an error as soon as it hits a problem.</p>\n\n<h1>Stages of Compilation</h1>\n    <p>Lexical Analysis is when comments and unnecessary spaces are removed. Keywords, constants, and identifiers are replaced by \'tokens\', which are symbolic strings to identify what the elements are.</p>\n    <p>Symbol Table Construction is a table that stores the names and addresses of all variables, constants, and arrays. Variables are then checked to make sure they have been declared and to determine the data types used.</p>\n    <p>Syntax Analysis is when the tokens are checked to see if they match the syntax of the programming language and if syntax errors are found, error messages are produced.</p>\n    <p>Semantic Analysis is when variables are checked to make sure they have been correctly declared and contain the correct data type. Operations are then checked to ensure that they are appropriate for the type of the variable being used.</p>\n    <p>Code Generation is where Machine code is generated.</p>\n    <p>Code Optimisation is when the program makes the code more efficient and makes sit run faster.</p>\n    <p>Linkers after the compiler has created all the object files, another program is called to bundle them into an executable program file, which is a linker and the process of bundling them into the executable is called linking.</p>\n    <p>Loaders are a part of the operating system and are responsible for loading executable files into memory and executing them.</p>\n    <p>Libraries are collections of prewritten code that users can use to optimize tasks.</p>', 10, 'Chapter 10 - Programming Language Translators');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Software Development</h1>\n    <p>Analysis - you decide what requiremnts your website needs</p>\n    <p>Design - you decide on what you wnat your program to do/look like</p>\n    <p>Implementation - this is where the code is written</p>\n    <p>Programming and Testing - you test for various problems within the website</p>\n    <p>Evaluation - you evaluate how well the program works and if anything needs to be improved</p>\n\n<h1>Lifecycle Methods</h1>\n    <p>Waterfall model is a sequential development process that flows like a waterfall through all phases of a project (analysis, design, development, and testing, for example), with each phase completely wrapping up before the next phase begins.</p>\n    <p>Spiral Model is a risk-driven software development process model. It is a combination of the waterfall model and iterative model and helps to adopt software development elements of multiple process models for the software project based on unique risk patterns ensuring an efficient development process.</p>\n    <p>Agile models provides individuals and interactions over processes and tools; working software over comprehensive documentation; customer collaboration over contract negotiation; and. responding to change over following a plan.</p>\n    <p>Extreme Programming aims to produce higher quality software and higher quality of life for the development team. XP is the most specific of the agile frameworks regarding appropriate engineering practices for software development.</p>', 11, 'Chapter 11 - Systems Analysis Methods');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Algorithms</h1>\n    <p>Properties of an Algorithm are that the algorithm must specify the output and how it is related to the input. The steps in the algorithm must be clearly defined and detailed. The steps in the algorithm must be doable and effective. and it must come to an end after a specific number of steps</p>\n    <p>What kinds of problems are solved by algorithms? They are used to solve certain types of computational problems.\nSimple recursive algorithms.\nBacktracking algorithms.\nDivide and conquer algorithms.\nDynamic programming algorithms.\nGreedy algorithms.\nBranch and bound algorithms.\nBrute force algorithms.\nRandomized algorithms.\n</p>', 12, 'Chapter 12 - Writing and Following Methods');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Programming Paradigms</h1>\n    <p>Procedural uses a linear or top-down approach. It relies on procedures or subroutines to perform computations. Procedural programming is also known as imperative programming.</p>\n    <p>Object-oriented is based on the concept of objects. In object-oriented programming data structures or objects are defined, each with its properties or attributes. Each object can also contain its procedures or methods. Software is designed by using objects that interact with one another.</p>\n    <p>Declarative is a method to abstract away the control flow for logic required for the software to act and instead involves stating what the task or desired outcome is.</p>\n    <p>Functional programming is a way of thinking about software construction by creating pure functions. It avoids concepts of shared state, mutable data observed in Object-Oriented Programming. Functional languages emphasize expressions and declarations rather than the execution of statements.</p>\n\n<h1>Object-Oriented Paradigms</h1>\n    <p>Inheritance is the procedure in which one class inherits the attributes and methods of another class. The class whose properties and methods are inherited is known as the Parent class.</p>\n    <p>Polymorphism is the provision of a single interface to entities of different types, or the use of a single symbol to represent multiple different types.</p>\n    <p>Cosntructors is a special method of a class or structure in object-oriented programming that initializes a newly created object of that type.</p>', 13, 'Chapter 13 - Programming Paradigms');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Assembly Language</h1>\n    <p>Assembly Language Instructions allows the designer to program in terms of the machine instructions that a specific processor can perform. Since binary machine-code instructions are difficult to understand directly, assembly-language programs are expressed in a symbolic notation.</p>', 14, 'Chapter 14 - Assembly Language');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Compression</h1>\n    <p>Lossy Compression is a method of data compression in which the size of the file is reduced by eliminating data in the file. In doing so, image quality is sacrificed to decrease file size.</p>\n    <p>Lossless Compression is a compression technique that does not lose any data in the compression process. Lossless compression “packs” data into a smaller file size by using a kind of internal shorthand to signify redundant data.</p>\n    <p>Run Length Encoding is a form of lossless data compression in which runs of data (sequences in which the same data value occurs in many consecutive data elements) are stored as a single data value and count.</p>\n    <p>Dictionary Based Compression are length substrings that are replaced by short, possibly even fixed-length codewords. Compression is achieved by replacing long strings with shorter codewords.</p>\n\n<h1>Encryption</h1>\n    <p>Caesar Cipher is a shift cipher and encrypts the data by replacing the original letters with “x” number of characters ahead in the alphabet.</p>\n    <p>Vernam Cipher s a substitution cipher where each plain text character is encrypted using its key. This key is randomly generated or is taken from a one-time pad. The key must be equal in length to the plain text message.</p>\n    <p>Symmetric (Private Key) Encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. The entities communicating via symmetric encryption must exchange the key so that it can be used in the decryption process.</p>\n    <p>Asymmetric (Public Key) Encryption is when anyone can encrypt messages using a public key, but only the holder of the paired private key can decrypt such a message.</p>\n    <p>Hashing is the process of transforming any given key or a string of characters into another value. This is usually represented by a shorter, fixed-length value or key that represents and makes it easier to find or employ the original string.</p>', 15, 'Chapter 15 - Compression, Encryption and Hashing');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Database Concepts</h1>\n    <p>Flat file database is a type of database that stores data in a single table. This is unlike a relational database, which makes use of multiple tables and relations.</p>\n    <p>Entity is any singular, identifiable, and separate object.</p>\n    <p>Primary Key is a key in a relational database that is unique for each record. It is a unique identifier, such as a driver\'s license number, telephone number,</p>\n    <p>Secondary Key is an additional key, or alternate key, which can be used in addition to the primary key to locate specific data.</p>\n    <p>Foreign Key is a column or group of columns in a relational database table that provides a link between data in two tables.</p>\n    <p>Relationships is a situation that exists between two relational database tables when one table has a foreign key that references the primary key of the other table.</p>\n    <p>Referential Integrity refers to the accuracy and consistency of data within a relationship. In relationships, data is linked between two or more tables.</p>', 16, 'Chapter 16 - Database Concepts');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Relational Databases</h1>\n    <p>Relational database is one which uses different tables for different entities.</p>\n    <p>Indexing is a method used to store the position of each record when ordered by a certain attribute and is used to look up and access data quickly and the primary key is automatically indexed. </p>\n    <p>Normalisation is the process of coming up with the best possible design for a relational database. Normalisation tries to accomplish the following things: No redundancy (unnecessary duplicates), Consistent data throughout linked tables, Records can be added and removed without issues, Complex queries can be carried out. </p>\n    <p>First Normal Form is where no attribute can contain more than a single value.</p>\n    <p>Second Normal Form is where there are no partial dependencies and is in first normal form. </p>\n    <p>Third Normal Form is in second normal form, Contains no non-key dependencies. A non key dependency is when the attribute depends on the value of the primary key and nothing else. </p>', 17, 'Chapter 17 - Relational Databases and Normalisation');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>SQL</h1>\n    <p>SQL Databases stands for Structured Query Language and is used to communicate with a database</p>\n    <p>SQL Conditions specifies a combination of one or more expressions and logical (Boolean) operators and returns a value of TRUE , FALSE , or unknown.</p>', 18, 'Chapter 18 - Introduction to SQL');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Database Table</h1>\n    <p>Data Types - String, Integer, Float, Character, Boolean</p>\n    <p>SQL Commands - SELECT, UPDATE, DELETE, INSERT INTO</p>', 19, 'Chapter 19 - Defining and Updating tables using SQL');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Transaction Processing</h1>\n    <p>Capturing Data</p>\n    <p>Selecting and Managing Data</p>\n    <p>Exchanging Data</p>\n    <p>ACID Atomicity: A transaction must be processed in its entirety or not at all. Consistency: A transaction must keep the referential integrity rules between linked tables. Isolation: Simultaneous execution of transactions must lead to the same result as if they were executed one after the other. Durability Once a transaction has been executed it will remain so.</p>', 20, 'Chapter 20 - Transaction Processing');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Structure of the Internet</h1>\n    <p>Bus Topology</p>\n    <p>Star Topology</p>\n    <p>Mesh Topology</p>', 21, 'Chapter 21 - Structure of the Internet');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Internet Communication</h1>\n    <p>Circuit Switching</p>\n    <p>Packet Switching</p>', 22, 'Chapter 22 - Internet Communication');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Network security and threats</h1>\n    <p>Firewalls</p>\n    <p>Proxy Servers</p>\n    <p>Packet Filtering</p>\n    <p>Worms, Trojans and Virsuses</p>\n    <p>System Vulnerabilities</p>', 23, 'Chapter 23 - Network Security and Threats');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>HTML and CSS</h1>\n    <p>HTML</p>\n    <p>CSS</p>', 24, 'Chapter 24 - HTML and CSS');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Webforms and JavaScript</h1>\n    <p>Web Forms</p>\n    <p>JavaScript</p>', 25, 'Chapter 25 - Web Forms and JavaScript');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Search Engine Indexing</h1>\n    <p>Search Engines</p>\n    <p>PageRank Algorithm</p>', 26, 'Chapter 26 - Search Engine Indexing');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Client Server and Peer-to-Peer</h1>\n    <p>Client Server Networking</p>\n    <p>Peer-to-Peer Networks</p>', 27, 'Chapter 27 - Client-Server and Peer-to-Peer');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Primitive Data Types, Binary and Hexadecimal</h1>\n    <p>Primitive Data Types</p>\n    <p>Binary</p>\n    <p>Hexadecimal</p>', 28, 'Chapter 28 - Primitive Data Types, Binary and Hexadecimal');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>ASCII and Unicode</h1>\n    <p>ASCII</p>\n    <p>Unicode</p>', 29, 'Chapter 29 - ASCII and Unicode');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Binary Arithmetic</h1>\n    <p>Binary Calculations</p>', 30, 'Chapter 30 - Binary Arithmetic');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Floating Point Arithmetic</h1>\n    <p>Floating Point Arithmetic</p>\n    <p>Normalisation</p>\n    <p>Floating Point addition and subtraction</p>', 31, 'Chapter 31 - Floating Point Arithmetic');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Bitwise Manipulation and Masks</h1>\n    <p>Logical Shifts</p>\n    <p>Arithmetic Shift Instructions</p>\n    <p>Circular Shift Instructions</p>\n    <p>Logical Instructions</p>', 32, 'Chapter 32 - Bitwise Manipulation and Masks');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Data Structures</h1>\n    <p>Arrays</p>\n    <p>Tuples</p>\n    <p>Records</p>', 33, 'Chapter 33 - Arrays, Tuples and Records');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Queues</h1>\n    <p>Queues</p>\n    <p>Abstract Data Types</p>', 34, 'Chapter 34 - Queues');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Lists and Linked Lists</h1>\n    <p>Lists</p>\n    <p>Linked Lists</p>', 35, 'Chapter 35 - Lists and Linked Lists');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Stacks</h1>\n    <p>Stack Concept</p>\n    <p>Applications of a stack</p>\n    <p>Implementation of a Stack</p>\n    <p>Operations on a Stack</p>', 36, 'Chapter 36 - Stacks');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Hash Tables</h1>\n    <p>Hashing</p>\n    <p>Hash Tables</p>', 37, 'Chapter 37 - Hash Tables');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Graphs</h1>\n    <p>Graphs</p>\n    <p>Implementing a Graph</p>\n    <p>Traversing a Graph</p>\n    <p>Graphs</p>', 38, 'Chapter 38 - Graphs');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Trees</h1>\n    <p>Concept of a tree</p>\n    <p>Binary Search Tree</p>\n    <p>Traversing a Binary Tree</p>', 39, 'Chapter 39 - Trees');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Logic Gates and Truth Tables</h1>\n    <p>Binary Logic</p>\n    <p>Truth Tables</p>\n    <p>Logic Gates</p>', 40, 'Chapter 40 - Logic Gates and Truth Tables');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>de Morgans laws</h1>\n    <p>de Morgans first law</p>\n    <p>de Morgans second law</p>\n    <p>Rules of boolean algebra</p>', 41, 'Chapter 41 - Simplifying Boolean Expressions');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Karnaugh Maps</h1>\n    <p>What are karnaugh maps?</p>', 42, 'Chapter 42 - Karnaugh Maps');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Adders and D-Type flip-flops</h1>\n    <p>Half Adders</p>\n    <p>Full Adders</p>', 43, 'Chapter 43 - Adders and D-type Flip-Flops');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Computing Related Legislation</h1>\n    <p>Data Protection Act 1998</p>\n    <p>Computer Misuse Act 1990</p>\n    <p>Copyright Designs and Patents Act 1988</p>', 44, 'Chapter 44 - Computing Related Legislation');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Ethical, moral and cultural issues</h1>\n    <p>Economic</p>\n    <p>Cultural</p>\n    <p>Enviromental</p>', 45, 'Chapter 45 - Ethical, Moral and Cultural Issues');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Privacy and Censorship</h1>\n    <p>Censorship on the internet</p>\n    <p>Dangers on the internet</p>', 46, 'Chapter 46 - Privacy and Censorship');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Thinking abstractly</h1>\n    <p>Computational Thinking</p>\n    <p>Abstraction</p>', 47, 'Chapter 47 - Thinking Abstractly');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Thinkign ahead</h1>\n    <p>Computational problems</p>', 48, 'Chapter 48 - Thinking Ahead');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Thinking procedurally</h1>\n    <p>Procedural Abstraction</p>', 49, 'Chapter 49 - Thinking Procedurally');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Thinking logically, thinking concurrently</h1>\n    <p>Structured Approach</p>', 50, 'Chapter 50 - Thinking Logically, Thinking Concurrently');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Problem Recognition</h1>\n    <p>Computable Problems</p>\n    <p>Methods of problem solving</p>', 51, 'Chapter 51 - Problem Recognition');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Problem Solving</h1>\n    <p>Visualisation</p>\n    <p>Backtracking</p>\n    <p>Data Mining</p>\n    <p>Heuristics</p>\n    <p>Performance Modelling</p>\n    <p>Pipelining</p>', 52, 'Chapter 52 - Problem Solving');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Programming Basics</h1>\n    <p>Algorithms</p>\n    <p>Pseudocode</p>\n    <p>Flowcharts</p>', 53, 'Chapter 53 - Programming Basics');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Selection</h1>\n    <p>Selection</p>\n    <p>Program Constructs</p>', 54, 'Chapter 54 - Selection');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Iteration</h1>\n    <p>Iteration</p>\n    <p>Loops</p>', 55, 'Chapter 55 - Iteration');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Subroutine and Recursion</h1>\n    <p>Types of subroutines</p>\n    <p>Parameters</p>\n    <p>Stacks</p>', 56, 'Chapter 56 - Subroutines and Recurison');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Use of an IDE</h1>\n    <p>IDE Facilities</p>\n    <p>Compiling your program</p>', 57, 'Chapter 57 - Use of an IDE');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Object-Oriented Techniques</h1>\n    <p>Procedural Programming</p>\n    <p>Object-Oriented Programming</p>\n    <p>object attributes and behaviours</p>\n    <p>Classes</p>\n    <p>Instantiation</p>\n    <p>Inheritance</p>\n    <p>Encapsulation</p>\n    <p>Polymorphism</p>', 58, 'Chapter 58 - Use of Object-Oriented Techniques');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Analysis and design of algorithms</h1>\n    <p>Comparing Algorithms</p>\n    <p>Functions</p>', 59, 'Chapter 59 - Analysis and Design of Algorithms');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Searching Algorithms</h1>\n    <p>Linear Search</p>\n    <p>Binary Search</p>\n    <p>Recursive Algorithm</p>\n    <p>Binary Tree Search</p>', 60, 'Chapter 60 - Searching Algorithms');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Bubble Sort and Insertion Sort</h1>\n    <p>Sorting Algorithms</p>\n    <p>Bubble Sort</p>\n    <p>Insertion Sort</p>', 61, 'Chapter 61 - Bubble Sort and Insertion Sort');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Merge Sort and Quick Sort</h1>\n    <p>Merge Sort</p>\n    <p>Quick Sort</p>', 62, 'Chapter 62 - Merge Sort and Quick Sort');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Graph Traversal Algorithms</h1>\n    <p>Graph Traversal</p>\n    <p>Depth-first Traversal</p>', 63, 'Chapter 63 - Graph Traversal Algorithms');
insert into `pages` (`chapterContent`, `chapterID`, `chapterTitle`) values ('<?php\n\tinclude_once \'header.php\';\n?>\n\n<head>\n  <link rel=\"stylesheet\" href=\"assets/css/main.css\">\n</head>\n\n<h1>Optimisation Algorithms</h1>\n    <p>Optimisation problems</p>\n    <p>Dijkstra\'s</p>\n    <p>A* Algorithm</p>\n', 64, 'Chapter 64 - Optimisation Algorithms');
